Создайте класс с именем Account для представления банковского счета. Класс Account должен содержать:
o    Скрытое поле данных типа int с именем id (идентификатор) счета (по умолчанию равное 0).
o    Скрытое поле данных типа double с именем balance (остаток, баланс) счета (по умолчанию равное 0).
o    Скрытое поле данных типа double с именем annualInterestRate, в котором хранится годовая процентная ставка
(по умолчанию равная 0). Пусть у всех счетов она будет одинаковая.
o    Скрытое поле данных типа Date с именем dateCreated, в котором хранится дата создания счета.
o    Безаргументный конструктор, который создает счет с заданными по умолчанию значениями.
o    Конструктор, который создает счет с указанными id и balance.
o    Getter и setter-методы для id, balance и annualInterestRate.
o    Getter-метод для dateCreated.
o    Метод с именем getMonthlyInterest(), который возвращает ежемесячный процент.
o    Метод с именем withdraw(), который снимает со счета указанную сумму.
o    Метод с именем deposit(), который пополняет счет на указанную сумму.
Нарисуйте UML-диаграмму класса Account, а затем реализуйте этот класс. (Подсказка: метод getMonthlyInterest()
предназначен для возврата ежемесячных процентов, а не процентной ставки.
Ежемесячные проценты = balance * ежемесячная процентная ставка. Ежемесячная процентная ставка = annualInterestRate / 12.
Обратите внимание, что значение annualInterestRate измеряется в процентах, например, 4.5%, поэтому необходимо делить его на 100.)
Напишите клиент этого класса — программу, которая создает объект типа Account с ID счета, равным 1122, балансом,
равным 20 000 руб., и годовой процентной ставкой, равной 4.5%. Используйте метод withdraw(), чтобы снять 2 500 руб.,
метод deposit(), чтобы положить 3 000 руб. и отобразите в консоли баланс, ежемесячные проценты и дату создания этого счета.

